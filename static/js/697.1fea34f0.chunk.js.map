{"version":3,"file":"static/js/697.1fea34f0.chunk.js","mappings":"4KAaA,QATA,SAAgBA,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,2ICEA,MAAMI,EAAS,CACbC,UAAW,CACTC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,aAAc,GAEhBC,mBAAoB,CAClBC,WAAY,aA2DhB,QAvDA,SAAgBZ,GAAQ,IAADa,EACrB,MAAM,OAAEC,GAAWd,GACZe,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAiBjC,OATAC,EAAAA,EAAAA,YAAU,KACRC,MAAMC,IAAAA,OAAkB,CACtBC,OAAQ,QAEPC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQP,EAAQO,KACtBE,OAAOC,GAAQA,GAAI,GACrB,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAxB,SAAA,EACEF,EAAAA,EAAAA,KAAC2B,EAAAA,QAAM,CAAC5B,MAAOa,IACdC,GACCb,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAAA1B,UACHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCuB,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAAA3B,SAAA,EArBO4B,EAsBIjB,EAAKiB,OArBlC9B,EAAAA,EAAAA,KAAA,MAAI+B,MAAO5B,EAAOM,mBAAmBP,UACnCF,EAAAA,EAAAA,KAACgC,EAAAA,EAAa,CAAC9B,SAAU4B,OAqBL,QADkBnB,EAC7BE,EAAKoB,cAAM,IAAAtB,OAAA,EAAXA,EAAauB,KAAKC,IACjBV,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAE,SAAKiC,EAAKpC,QACToC,EAAKC,MAAMF,KAAKG,IACfZ,EAAAA,EAAAA,MAAA,OAAsBM,MAAO,CAAEO,QAAS,gBAAiBpC,SAAA,EACvDF,EAAAA,EAAAA,KAAA,OACE+B,MAAO5B,EAAOC,UACdmC,IAAKF,EAAKG,KACVC,IAAKJ,EAAKtC,SAEZC,EAAAA,EAAAA,KAAA,KAAAE,SAAImC,EAAKtC,UANDsC,EAAKtC,WAJToC,EAAKpC,iBAkBrBC,EAAAA,EAAAA,KAAC0C,EAAAA,QAAe,OA1CGZ,KA6C7B,C","sources":["components/Header.jsx","components/Skills.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal';\nimport { Container } from 'react-bootstrap';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\n\nconst styles = {\n  iconStyle: {\n    height: 75,\n    width: 75,\n    margin: 10,\n    marginBottom: 0,\n  },\n  introTextContainer: {\n    whiteSpace: 'pre-wrap',\n  },\n};\n\nfunction Skills(props) {\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  const renderSkillsIntro = (intro) => (\n    <h4 style={styles.introTextContainer}>\n      <ReactMarkdown children={intro} />\n    </h4>\n  );\n\n  useEffect(() => {\n    fetch(endpoints.skills, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div className=\"section-content-container\">\n            <Container>\n              {renderSkillsIntro(data.intro)}\n              {data.skills?.map((rows) => (\n                <div key={rows.title}>\n                  <br />\n                  <h3>{rows.title}</h3>\n                  {rows.items.map((item) => (\n                    <div key={item.title} style={{ display: 'inline-block' }}>\n                      <img\n                        style={styles.iconStyle}\n                        src={item.icon}\n                        alt={item.title}\n                      />\n                      <p>{item.title}</p>\n                    </div>\n                  ))}\n                </div>\n              ))}\n            </Container>\n          </div>\n        </Fade>\n      ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nSkills.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Skills;\n"],"names":["props","title","_jsx","className","children","styles","iconStyle","height","width","margin","marginBottom","introTextContainer","whiteSpace","_data$skills","header","data","setData","useState","useEffect","fetch","endpoints","method","then","res","json","catch","err","_jsxs","_Fragment","Header","Fade","Container","intro","style","ReactMarkdown","skills","map","rows","items","item","display","src","icon","alt","FallbackSpinner"],"sourceRoot":""}